<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/googleads/v2/services/reach_plan_service.proto

namespace Google\Ads\GoogleAds\V2\Services;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A plannable location: a country, a DMA, a metro region, a tv region,
 * a province.
 *
 * Generated from protobuf message <code>google.ads.googleads.v2.services.PlannableLocation</code>
 */
final class PlannableLocation extends \Google\Protobuf\Internal\Message
{
    /**
     * The location identifier.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue id = 1;</code>
     */
    private $id = null;
    /**
     * The unique location name in english.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue name = 2;</code>
     */
    private $name = null;
    /**
     * The parent country code, not present if location is a country.
     * If present will always be a criterion id: additional information, such as
     * country name are returned both via ListPlannableLocations or directly by
     * accessing GeoTargetConstantService with the criterion id.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value parent_country_id = 3;</code>
     */
    private $parent_country_id = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\StringValue $id
     *           The location identifier.
     *     @type \Google\Protobuf\StringValue $name
     *           The unique location name in english.
     *     @type \Google\Protobuf\Int64Value $parent_country_id
     *           The parent country code, not present if location is a country.
     *           If present will always be a criterion id: additional information, such as
     *           country name are returned both via ListPlannableLocations or directly by
     *           accessing GeoTargetConstantService with the criterion id.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Ads\GoogleAds\V2\Services\ReachPlanService::initOnce();
        parent::__construct($data);
    }

    /**
     * The location identifier.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue id = 1;</code>
     * @return \Google\Protobuf\StringValue
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the unboxed value from <code>getId()</code>

     * The location identifier.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue id = 1;</code>
     * @return string|null
     */
    public function getIdUnwrapped()
    {
        $wrapper = $this->getId();
        return is_null($wrapper) ? null : $wrapper->getValue();
    }

    /**
     * The location identifier.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue id = 1;</code>
     * @param \Google\Protobuf\StringValue $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\StringValue::class);
        $this->id = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\StringValue object.

     * The location identifier.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue id = 1;</code>
     * @param string|null $var
     * @return $this
     */
    public function setIdUnwrapped($var)
    {
        $wrappedVar = is_null($var) ? null : new \Google\Protobuf\StringValue(['value' => $var]);
        return $this->setId($wrappedVar);
    }

    /**
     * The unique location name in english.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue name = 2;</code>
     * @return \Google\Protobuf\StringValue
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Returns the unboxed value from <code>getName()</code>

     * The unique location name in english.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue name = 2;</code>
     * @return string|null
     */
    public function getNameUnwrapped()
    {
        $wrapper = $this->getName();
        return is_null($wrapper) ? null : $wrapper->getValue();
    }

    /**
     * The unique location name in english.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue name = 2;</code>
     * @param \Google\Protobuf\StringValue $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\StringValue::class);
        $this->name = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\StringValue object.

     * The unique location name in english.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue name = 2;</code>
     * @param string|null $var
     * @return $this
     */
    public function setNameUnwrapped($var)
    {
        $wrappedVar = is_null($var) ? null : new \Google\Protobuf\StringValue(['value' => $var]);
        return $this->setName($wrappedVar);
    }

    /**
     * The parent country code, not present if location is a country.
     * If present will always be a criterion id: additional information, such as
     * country name are returned both via ListPlannableLocations or directly by
     * accessing GeoTargetConstantService with the criterion id.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value parent_country_id = 3;</code>
     * @return \Google\Protobuf\Int64Value
     */
    public function getParentCountryId()
    {
        return $this->parent_country_id;
    }

    /**
     * Returns the unboxed value from <code>getParentCountryId()</code>

     * The parent country code, not present if location is a country.
     * If present will always be a criterion id: additional information, such as
     * country name are returned both via ListPlannableLocations or directly by
     * accessing GeoTargetConstantService with the criterion id.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value parent_country_id = 3;</code>
     * @return int|string|null
     */
    public function getParentCountryIdUnwrapped()
    {
        $wrapper = $this->getParentCountryId();
        return is_null($wrapper) ? null : $wrapper->getValue();
    }

    /**
     * The parent country code, not present if location is a country.
     * If present will always be a criterion id: additional information, such as
     * country name are returned both via ListPlannableLocations or directly by
     * accessing GeoTargetConstantService with the criterion id.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value parent_country_id = 3;</code>
     * @param \Google\Protobuf\Int64Value $var
     * @return $this
     */
    public function setParentCountryId($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Int64Value::class);
        $this->parent_country_id = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\Int64Value object.

     * The parent country code, not present if location is a country.
     * If present will always be a criterion id: additional information, such as
     * country name are returned both via ListPlannableLocations or directly by
     * accessing GeoTargetConstantService with the criterion id.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value parent_country_id = 3;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setParentCountryIdUnwrapped($var)
    {
        $wrappedVar = is_null($var) ? null : new \Google\Protobuf\Int64Value(['value' => $var]);
        return $this->setParentCountryId($wrappedVar);
    }

}

